name: 'Deploy docker-compose action'
description: 'Deploy docker-compose service'
author: 'zeekhuge'
branding:
  icon: 'maximize'
  color: 'blue'
inputs:
  working-directory:
    description: ''
    required: false
    default: './'
  filter:
    description: 'Filter images using this label'
    required: false
    default: ''
  host-address:
    description: 'Host address for docker-compose, example: 12.34.56.78 or www.google.com'
    required: true
  host-ssh-user:
    description: ''
    required: true
  ssh-private-key-base64:
    description: ''
    required: true
  project-name:
    description: 'A unique project name that sets the context for docker-compose'
    required: true
  deploy-strategy:
    description: 'Strategy used to deploy service. Supports remote-docker, ssh'
    required: false
    default: 'remote-docker'

runs:
  using: "composite"
  steps:
    - name: Create SSH key
      shell: bash
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ inputs.ssh-private-key-base64 }}" | base64 --decode > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ inputs.host-address }} > ~/.ssh/known_hosts

    - name: Deploying using remote-docker strategy
      if: ${{ inputs.deploy-strategy }} == 'remote-docker'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        echo "- Building docker-compose images locally ..."
        docker-compose -p ${{ inputs.project-name }} build
        docker images
        echo "- Down-ing docker-compose service on remote host ..."
        docker-compose -p ${{ inputs.project-name }} -f docker-compose.yml -H ssh://${{ inputs.host-ssh-user }}@${{ inputs.host-address }} down --remove-orphans
        echo "- Loading docker images to remote host ..."
        for image in $(docker images --filter='${{ inputs.filter }}' --format "{{.Repository}}:{{.Tag}}"); do \
          echo "- Sending docker image: ${image} to remote host"; \
          docker save ${image} | bzip2 | ssh ${{ inputs.host-ssh-user }}@${{ inputs.host-address }} docker load ; \
        done
        echo "- Up-ing docker-compose services on remote host ..."
        docker-compose -p ${{ inputs.project-name }} -f docker-compose.yml -H ssh://${{ inputs.host-ssh-user }}@${{ inputs.host-address }} up --remove-orphans --detach

    - name: 'Deploy using ssh strategy '
      if: ${{ inputs.deploy-strategy }} == 'ssh'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
          ssh ${{ inputs.host-ssh-user }}@${{ secrets.host-address }} 'mkdir -p ~/${{ inputs.project-name }}_{{ inputs.working-directory }}'
          tar cf - ./ | ssh ${{ inputs.host-ssh-user }}@${{ inputs.host-address }} 'tar xfC - ~/${{ inputs.project-name }}_${{ inputs.working-directory }}'
          ssh ${{ inputs.host-ssh-user }}@${{ inputs.host-address }} 'docker-compose stop'
          ssh ${{ inputs.host-ssh-user }}@${{ inputs.host-address }} 'cd ~/${{ inputs.project-name }}_${{ inputs.working-directory }} && docker-compose build && docker-compose up'
          ssh ${{ inputs.host-ssh-user }}@${{ inputs.host-address }} 'docker rmi $(docker images -qa) 2> /dev/null || echo "Remove what could"'
          ssh ${{ inputs.host-ssh-user }}@${{ inputs.host-address }} 'rm -rf ~/${{ inputs.project-name }}_${{ inputs.working-directory }}'
